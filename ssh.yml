---


    - name: Geneatre SSH CA publickey for PKI based ssh authentication
      ansible.builtin.expect:
        command: "/usr/bin/ssh-keygen -f {{ pki_dir }}/ca-ssh.key -y" # > {{ ssh_dir }}/ca-ssh.pub"
        responses:
          (?i)passphrase:: "{{ ca_passphrase}}"
      register: ssh_ca_cert

    - name: Write SSH certificate file 
      copy:
        dest: "{{ ssh_dir }}/ca-ssh.pub"
        content: "{{ ssh_ca_cert.stdout_lines[1] }}"
        setype: sshd_key_t
      delegate_to: 192.168.56.10
      run_once: true
      when: ssh_ca_cert is changed


    #- name: Create directory {{ pki_dir }}
    #  ansible.builtin.file:
    #    path: "{{ ssh_dir }}/ca-ssh.key"
    #    owner: root
    #    group: root
    #    mode: '0600'

    - name: Check whether Docker certificate exists
      stat:
        path: "{{ pki_dir }}/dockerdev"
      delegate_to: 192.168.56.10
      run_once: true
      register: dockerdev_exists


    - name: Generate an OpenSSH keypair for the dockerdev user
      community.crypto.openssh_keypair:
        path: "{{ ssh_dir }}/dockerdev"
      when: docker_exists.stat.exists != True


#ssh-keygen -f /etc/pki/o3h_certs/ca-ssh.key -y > private.pub

    - name: Generate SSH key certificate for the dockerdev user
      ansible.builtin.expect:
        command: /usr/bin/ssh-keygen -s {{ pki_dir }}/ca-ssh.key -I 'edcbb' -z '0003' -n dockerdev {{ ssh_dir }}/dockerdev.pub
        responses:
          (?i)passphrase:: "{{ ca_passphrase}}"
      register: ssh_cert

    - name: Change file ownership, group and permissions for the dockerdev user
      ansible.builtin.file:
        path: "{{ ssh_dir }}/{{ item }}"
        owner: root
        group: root
        setype: sshd_key_t
        mode: '0644'
      when: inventory_hostname == "192.168.56.10" #Might be better check is file exists
      with_items:
        - ca-ssh.pem
        - ca-ssh.pub
        - dockerdev
        - dockerdev-cert.pub
        - dockerdev.pub

    - name: Allow 'dockerdev' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: 'dockerdev ALL=!/bin/docker'
        validate: visudo -cf %s

    - name: Allow 'dockerdev' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: 'dockerdev ALL=NOPASSWD: /bin/docker system dial-stdio'
        validate: visudo -cf %s


#ssh -o CertificateFile=id_ssh_rsa-cert.pub -i /tmp/id_ssh_rsa vagrant@localhost