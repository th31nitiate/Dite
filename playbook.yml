---
### We start by provisioning theacreageenvironment
- hosts: acreage 
  become: yes
  vars:
    ca_passphrase: admin
    pki_dir: /etc/pki/dite_certs
    ssh_dir: /etc/ssh
    notes_web_dir: /var/www/html/private/notes
    hostsfiles:
      - "{{ pki_dir }}/ca.pem"
      - "{{ pki_dir }}/ca-http.pem"
  tasks:

    #Ensure to set certiifctae root directory including common name for certs /etc/pki/tls/certs/
    # Consider certificate concepts

    #We disable to this to permite for some of the priviledge escalation examples.
    - name: Put SELinux in permissive mode
      ansible.posix.selinux:
        policy: targeted
        state: disabled

    - name: Unconditionally reboot the machine with all defaults
      reboot:
    
    #Begin with configuring PKI system usage
    #This is since we will be requiring the certificates for diffirent services/
    - name: Configure PKI system
      include_tasks: tasks/certs.yml

    - name: Configure web application system
      include_tasks: tasks/docker.yml

    - name: Configure web application system
      include_tasks: tasks/webapp.yml

    - name: Configure SSH system
      include_tasks: tasks/ssh.yml
  handlers:
    - name: Update trust store
      ansible.builtin.command: /usr/bin/update-ca-trust

    - name: restart apache2
      service:
        name: httpd
        state: restarted

    - name: restart docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes

- hosts: all  
  become: yes
  vars:
    ca_passphrase: admin
    pki_dir: /etc/pki/dite_certs
    ssh_dir: /etc/ssh
    notes_web_dir: /var/www/html/private/notes
    hostsfiles:
      - "{{ pki_dir }}/ca.pem"
      - "{{ pki_dir }}/ca-http.pem"
  tasks:

    - name: Create directory {{ pki_dir }}
      ansible.builtin.file:
        path: "{{ pki_dir }}"
        owner: root
        group: root
        mode: '1644'
        state: directory

    - name: Fetch the file from the mwiapp01 to master
      run_once: yes
      fetch: src={{ pki_dir }}/{{ item }} dest=pki/{{ item }} flat=yes
      when: inventory_hostname == "192.168.56.10"
      with_items:
       - "ca.pem"
       - "ca-docker.pem"
       - "docker.pem"
       - "docker.key"

    - name: Fetch the file from the mwiapp01 to master
      run_once: yes
      fetch: src={{ ssh_dir }}/{{ item }} dest=pki/{{ item }} flat=yes
      when: inventory_hostname == "192.168.56.10"
      with_items:
       - "ca-ssh.pub"

    - name: Copy the file from master to mwiapp02
      copy: src=pki/{{ item }} dest={{ pki_dir }}/{{ item }}
      when: inventory_hostname == "192.168.56.11"
      with_items:
       - "ca.pem"
       - "ca-docker.pem"
       - "docker.pem"
       - "docker.key"
       
    - name: Copy the file from master to mwiapp02
      copy: src=pki/{{ item }} dest={{ ssh_dir }}/{{ item }}
      when: inventory_hostname == "192.168.56.11"
      with_items:
       - "ca-ssh.pub"

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: "{{ ssh_dir }}/ca-ssh.pub"
        owner: root
        group: root
        setype: sshd_key_t
        mode: '0644'
      when: inventory_hostname == "192.168.56.11"

    - name: Update sshd configuration safely, avoid locking yourself out
      ansible.builtin.template:
        src: config/sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0600'
        validate: /usr/sbin/sshd -t -f %s
        backup: yes
      notify:
       - restart sshd
  
    - name: Write proof.txt to file 
      copy:
        dest: "/root/proof.txt"
        content: "c395f273ed118c4bdba3d1390b49d82de8e3b4264b91686d41f5796d3aab290a"
      run_once: true
      when: inventory_hostname == "192.168.56.10"

    - name: Write local.txt to file 
      copy:
        dest: "/home/dockerdev/local.txt"
        content: "7e3c87a8055f2adbc978814fe24fb52d8e7ebb25467a5509959f0b750cb60d6d"
        mode: 0644
      run_once: true
      when: inventory_hostname == "192.168.56.10"

    - name: Write proof.txt to file 
      copy:
        dest: "/root/proof.txt"
        content: "c395f273ed118c4bdba3d1390b49d82de8e3b4264b91686d41f5796d3aab290a"
        mode: 0700
      run_once: true
      when: inventory_hostname == "192.168.56.11"

    - name: Write local.txt to file 
      copy:
        dest: "/home/dockerdev/local.txt"
        content: "7e3c87a8055f2adbc978814fe24fb52d8e7ebb25467a5509959f0b750cb60d6d"
        mode: 0644
      run_once: true
      when: inventory_hostname == "192.168.56.11"

  handlers:
    - name: restart docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes

    - name: restart apache2
      service:
        name: httpd
        state: restarted

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: Update trust store
      ansible.builtin.command: /usr/bin/update-ca-trust


- hosts: nodes  
  become: yes
  vars:
    ca_passphrase: TestValue
    pki_dir: /etc/pki/dite_certs
    ssh_dir: /etc/ssh
    notes_web_dir: /var/www/html/private/notes
    hostsfiles:
      - "{{ pki_dir }}/ca.pem"
      - "{{ pki_dir }}/ca-http.pem"
  tasks:
    - name: Configure HTTP system
      include_tasks: tasks/web.yml

    - name: Configure web application system
      include_tasks: tasks/docker.yml

    - name: Enable HTTP access service
      ansible.posix.firewalld:
        port: 3434/tcp
        permanent: yes
        state: enabled

  handlers:
    - name: restart docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes