---

### We start by provisioning theacreageenvironment
- hosts: acreage 
  become: yes
  vars:
    ca_passphrase: TestValue
    pki_dir: /etc/pki/dite_certs
    ssh_dir: /etc/ssh
    notes_web_dir: /var/www/html/private/notes
    hostsfiles:
      - "{{ pki_dir }}/ca.pem"
      - "{{ pki_dir }}/ca-http.pem"
  tasks:

#Ensure to set certiifctae root directory including common name for certs /etc/pki/tls/certs/
# Consider certificate concepts

    #We disable to this to permite for some of the priviledge escalation examples.
    - name: Put SELinux in permissive mode
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    #- name: Unconditionally reboot the machine with all defaults
    #  reboot:
    
    #Begin with configuring PKI system usage
    #This is since we will be requiring the certificates for diffirent services/
    - name: Configure PKI system
      include_tasks: certs.yml


    - name: Configure web application system
      include_tasks: docker.yml

    - name: Configure web application system
      include_tasks: webapp.yml

    - name: Configure the firewalld server
      service:
        name: firewalld
        state: stopped

    - name: Configure SSH system
      include_tasks: ssh.yml
  handlers:
    - name: restart ntpd
      service:
        name: ntpd
        state: restarted

    - name: restart docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes

    - name: restart apache2
      service:
        name: httpd
        state: restarted

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: Update trust store
      ansible.builtin.command: /usr/bin/update-ca-trust

- hosts: all  
  become: yes
  vars:
    ca_passphrase: TestValue
    pki_dir: /etc/pki/dite_certs
    ssh_dir: /etc/ssh
    notes_web_dir: /var/www/html/private/notes
    hostsfiles:
      - "{{ pki_dir }}/ca.pem"
      - "{{ pki_dir }}/ca-http.pem"
  tasks:
    - name: Configure HTTP system
      include_tasks: web.yml

    #- name: Configure web application system
    #  include_tasks: docker.yml

    - name: Add default docker user
      ansible.builtin.user:
        name: dockerdev
        comment: Account used for local dockeracreageelopment
        uid: 1040
        shell: /bin/bash


    - name: Create directory {{ pki_dir }}
      ansible.builtin.file:
        path: "{{ pki_dir }}"
        owner: root
        group: root
        mode: '1644'
        state: directory

    - name: Fetch the file from the mwiapp01 to master
      run_once: yes
      fetch: src={{ pki_dir }}/{{ item }} dest={{ item }} flat=yes
      when: inventory_hostname == "192.168.56.10"
      with_items:
       - "ca.pem"
       - "ca-docker.pem"
       - "docker.pem"
       - "docker.key"

    - name: Fetch the file from the mwiapp01 to master
      run_once: yes
      fetch: src={{ ssh_dir }}/{{ item }} dest={{ item }} flat=yes
      when: inventory_hostname == "192.168.56.10"
      with_items:
       - "ca-ssh.pub"

    - name: Copy the file from master to mwiapp02
      copy: src={{ item }} dest={{ pki_dir }}/{{ item }}
      when: inventory_hostname == "192.168.56.11"
      with_items:
       - "ca.pem"
       - "ca-docker.pem"
       - "docker.pem"
       - "docker.key"
       
    - name: Copy the file from master to mwiapp02
      copy: src={{ item }} dest={{ ssh_dir }}/{{ item }}
      when: inventory_hostname == "192.168.56.11"
      with_items:
       - "ca-ssh.pub"

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: "{{ ssh_dir }}/ca-ssh.pub"
        owner: root
        group: root
        setype: sshd_key_t
        mode: '0644'
      when: inventory_hostname == "192.168.56.11"


    - name: Update sshd configuration safely, avoid locking yourself out
      ansible.builtin.template:
        src: sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0600'
        validate: /usr/sbin/sshd -t -f %s
        backup: yes
      notify:
       - restart sshd

  handlers:
    - name: restart ntpd
      service:
        name: ntpd
        state: restarted

    - name: restart docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes

    - name: restart apache2
      service:
        name: httpd
        state: restarted

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: Update trust store
      ansible.builtin.command: /usr/bin/update-ca-trust


- hosts: nodes  
  become: yes
  vars:
    ca_passphrase: TestValue
    pki_dir: /etc/pki/dite_certs
    ssh_dir: /etc/ssh
    notes_web_dir: /var/www/html/private/notes
    hostsfiles:
      - "{{ pki_dir }}/ca.pem"
      - "{{ pki_dir }}/ca-http.pem"
  tasks:
    - name: Configure HTTP system
      include_tasks: web.yml

    - name: Configure web application system
      include_tasks: docker.yml
  handlers:
    - name: restart ntpd
      service:
        name: ntpd
        state: restarted

    - name: restart docker
      service:
        name: docker
        state: restarted
        daemon_reload: yes

    - name: restart apache2
      service:
        name: httpd
        state: restarted

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: Update trust store
      ansible.builtin.command: /usr/bin/update-ca-trust